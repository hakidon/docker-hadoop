# hadoop-deployment.yaml

apiVersion: v1
kind: Service
metadata:
  name: namenode
spec:
  selector:
    app: namenode
  ports:
    - protocol: TCP
      port: 50070
      targetPort: 50070
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: namenode
spec:
  replicas: 1
  selector:
    matchLabels:
      app: namenode
  template:
    metadata:
      labels:
        app: namenode
    spec:
      containers:
        - name: namenode
          image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
          env:
            - name: CLUSTER_NAME
              value: test
          ports:
            - containerPort: 50070
          volumeMounts:
            - name: namenode-data
              mountPath: /hadoop/dfs/name
      volumes:
        - name: namenode-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: datanode
spec:
  selector:
    app: datanode
  ports:
    - protocol: TCP
      port: 50075
      targetPort: 50075
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: datanode
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datanode
  template:
    metadata:
      labels:
        app: datanode
    spec:
      containers:
        - name: datanode
          image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
          env:
            - name: SERVICE_PRECONDITION
              value: "namenode:50070"
          ports:
            - containerPort: 50075
          volumeMounts:
            - name: datanode-data
              mountPath: /hadoop/dfs/data
      volumes:
        - name: datanode-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: resourcemanager
spec:
  selector:
    app: resourcemanager
  ports:
    - protocol: TCP
      port: 8088
      targetPort: 8088
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resourcemanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resourcemanager
  template:
    metadata:
      labels:
        app: resourcemanager
    spec:
      containers:
        - name: resourcemanager
          image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
          env:
            - name: SERVICE_PRECONDITION
              value: "namenode:50070 datanode:50075"
          ports:
            - containerPort: 8088
---
apiVersion: v1
kind: Service
metadata:
  name: nodemanager
spec:
  selector:
    app: nodemanager
  ports:
    - protocol: TCP
      port: 8042
      targetPort: 8042
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodemanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodemanager
  template:
    metadata:
      labels:
        app: nodemanager
    spec:
      containers:
        - name: nodemanager
          image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
          env:
            - name: SERVICE_PRECONDITION
              value: "namenode:50070 datanode:50075 resourcemanager:8088"
          ports:
            - containerPort: 8042
---
apiVersion: v1
kind: Service
metadata:
  name: historyserver
spec:
  selector:
    app: historyserver
  ports:
    - protocol: TCP
      port: 8188
      targetPort: 8188
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: historyserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: historyserver
  template:
    metadata:
      labels:
        app: historyserver
    spec:
      containers:
        - name: historyserver
          image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
          env:
            - name: SERVICE_PRECONDITION
              value: "namenode:50070 datanode:50075 resourcemanager:8088"
          ports:
            - containerPort: 8188
# hadoop-deployment.yaml

apiVersion: v1
kind: Service
metadata:
  name: namenode
spec:
  selector:
    app: namenode
  ports:
    - protocol: TCP
      port: 50070
      targetPort: 50070
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: namenode
spec:
  replicas: 1
  selector:
    matchLabels:
      app: namenode
  template:
    metadata:
      labels:
        app: namenode
    spec:
      containers:
        - name: namenode
          image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
          env:
            - name: CLUSTER_NAME
              value: test
          ports:
            - containerPort: 50070
          volumeMounts:
            - name: namenode-data
              mountPath: /hadoop/dfs/name
      volumes:
        - name: namenode-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: datanode
spec:
  selector:
    app: datanode
  ports:
    - protocol: TCP
      port: 50075
      targetPort: 50075
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: datanode
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datanode
  template:
    metadata:
      labels:
        app: datanode
    spec:
      containers:
        - name: datanode
          image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
          env:
            - name: SERVICE_PRECONDITION
              value: "namenode:50070"
          ports:
            - containerPort: 50075
          volumeMounts:
            - name: datanode-data
              mountPath: /hadoop/dfs/data
      volumes:
        - name: datanode-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: resourcemanager
spec:
  selector:
    app: resourcemanager
  ports:
    - protocol: TCP
      port: 8088
      targetPort: 8088
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resourcemanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resourcemanager
  template:
    metadata:
      labels:
        app: resourcemanager
    spec:
      containers:
        - name: resourcemanager
          image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
          env:
            - name: SERVICE_PRECONDITION
              value: "namenode:50070 datanode:50075"
          ports:
            - containerPort: 8088
---
apiVersion: v1
kind: Service
metadata:
  name: nodemanager
spec:
  selector:
    app: nodemanager
  ports:
    - protocol: TCP
      port: 8042
      targetPort: 8042
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodemanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodemanager
  template:
    metadata:
      labels:
        app: nodemanager
    spec:
      containers:
        - name: nodemanager
          image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
          env:
            - name: SERVICE_PRECONDITION
              value: "namenode:50070 datanode:50075 resourcemanager:8088"
          ports:
            - containerPort: 8042
---
apiVersion: v1
kind: Service
metadata:
  name: historyserver
spec:
  selector:
    app: historyserver
  ports:
    - protocol: TCP
      port: 8188
      targetPort: 8188
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: historyserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: historyserver
  template:
    metadata:
      labels:
        app: historyserver
    spec:
      containers:
        - name: historyserver
          image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
          env:
            - name: SERVICE_PRECONDITION
              value: "namenode:50070 datanode:50075 resourcemanager:8088"
          ports:
            - containerPort: 8188
